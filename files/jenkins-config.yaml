jenkins:
  systemMessage: "Welcome to Jenkins ${USERNAME}!"
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: ${USERNAME}
          password: ${PASSWORD}
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false

credentials:
  system:
    domainCredentials:
      - domain:
          name: "Global credentials"
          description: "Global credentials"
        credentials:
          - usernamePassword:
              scope: GLOBAL
              id: "github-credentials"
              username: ${GITHUB_USERNAME}
              password: ${GITHUB_ACCESS_TOKEN}
              description: "GitHub credentials"
          - usernamePassword:
              scope: GLOBAL
              id: "docker-credentials"
              username: ${DOCKER_USERNAME}
              password: ${DOCKER_TOKEN}
              description: "Docker credentials"

jobs:
  - script: >
      pipelineJob('docker-build-and-push') {
          definition {
              cps {
                  script('''
                      pipeline {
                        agent any
                        environment {
                            DOCKER_CREDENTIALS_ID = 'docker-credentials'
                            DOCKER_IMAGE = 'nexflare73/jenkinscheck'
                            DOCKER_REGISTRY = 'https://registry.hub.docker.com'
                            BUILD_ID = 'nexflareJay'
                            DOCKER_USERNAME = 'nexflare73'
                        }
                        stages {
                            stage('Checkout') {
                                steps {
                                    // Checkout code from the main branch
                                    git branch: 'main', url: 'https://github.com/csye7125-su24-team05/static-site', credentialsId: 'github-credentials'
                                }
                            }
                            stage('Build Docker Image') {
                                steps {
                                    script {
                                        // Build Docker image
                                        docker.build("${DOCKER_IMAGE}:${BUILD_ID}")
                                    }
                                }
                            }
                            stage('Push Docker Image') {
                                steps {
                                    script {
                                        // Login to Docker registry
                                        // docker.withRegistry(DOCKER_REGISTRY, DOCKER_CREDENTIALS_ID) {
                                        //     // Push Docker image
                                        //     docker.image("${DOCKER_IMAGE}:${BUILD_ID}").push()
                                        // }
                                        sh 'docker login -u ${DOCKER_USERNAME} -p dckr_pat__wk8-rDDYHoQj919NjUeRIfCi-w'
                                        docker.image("${DOCKER_IMAGE}:${BUILD_ID}").push()
                                    }
                                }
                            }
                        }
                        post {
                            always {
                                // Cleanup
                                cleanWs()
                            }
                        }
                    }
                  ''')
                  sandbox(true)
              }
          }
          triggers {
              githubPush()
          }
      }

unclassified:
  location:
    url: "http://143.198.116.18:8080"

  githubpluginconfig:
    configs:
      - apiUrl: "https://api.github.com"
        manageHooks: true
        credentialsId: "github-credentials"
        name: "github"
